<?xml version="1.0" encoding="UTF-8"?><xml-report name="AppScan Report" xmlExportVersion="2.4" technology="SAST"><!-- Note: This dictionary includes text strings for a variety of XML reports. Not all strings apply to the current report. --><dictionary><item id="InformationalSeverityIssues">Informational severity issues:</item><item id="advisories">Advisories</item><item id="alternates">Alternate Fix Suggestions</item><item id="apiColon">API:</item><item id="atLine">at line</item><item id="call">Call</item><item id="callerColon">Caller:</item><item id="causesColon">Causes:</item><item id="createdByAppScan">IBM Security Static Analyzer, Version:</item><item id="createdByColon">Created by:</item><item id="descriptionColon">Description:</item><item id="displayNameColon">Name:</item><item id="example">Example</item><item id="exampleTraceColon">Example Trace:</item><item id="executiveSummary">Summary</item><item id="file">File</item><item id="fileColon">File:</item><item id="fixColon">Fix:</item><item id="fixRecommendations">Issues</item><item id="fixRecommendationsColon">Fix Groups:</item><item id="goToTableOfContents">Go to Table of Contents</item><item id="high">High</item><item id="highSeverityIssues">High severity issues:</item><item id="informational">Informational</item><item id="introductionContent">This report includes important security information about your application.</item><item id="issue">Issue</item><item id="issueTypesColon">Issue Types:</item><item id="issueTypesDiscovered">Issue Types</item><item id="issues">Issues</item><item id="issuesColon">Issues:</item><item id="line">Line</item><item id="lostSink">Lost Sink</item><item id="low">Low</item><item id="lowSeverityIssues">Low severity issues:</item><item id="medium">Medium</item><item id="mediumSeverityIssues">Medium severity issues:</item><item id="method">Trace</item><item id="nameColon">Name:</item><item id="noIssuesFound">No security issues discovered in the scan</item><item id="none">None</item><item id="notAValidator">Not a Validator</item><item id="numberOfIssues">Number of Issues</item><item id="of">of</item><item id="operatingSystemColon">Scan type:</item><item id="owasp">OWASP Top 10</item><item id="owaspColon">OWASP:</item><item id="preface">Sample Trace</item><item id="publishDateColon">Publish date:</item><item id="referenceColon">Reference:</item><item id="reportType">Static Analyzer Report</item><item id="resolutionColon">Resolution:</item><item id="riskColon">Risk:</item><item id="scanDateColon">Scan started:</item><item id="scanFileNameColon">Scan file name:</item><item id="scanNameColon">Scan name:</item><item id="securityIssueSummary">Summary of security issues</item><item id="securityRisks">Security Risks</item><item id="securityRisksColon">Security Risks:</item><item id="severityColon">Severity:</item><item id="signature">Fix Recommendation</item><item id="sink">Sink</item><item id="sinkColon">Sink:</item><item id="source">Source</item><item id="sourceAndSink">Source and Sink</item><item id="sourceColon">Source:</item><item id="synopsisColon">Synopsis:</item><item id="tableOfContents">Table of Contents</item><item id="taint">Tainted Arg</item><item id="taintPropagator">Taint Propagator</item><item id="testTechnicalDescriptionColon">Mitigation:</item><item id="testTypeColon">Description:</item><item id="textFixDescImpl">Implementation of {0}</item><item id="textFixDescUse">Usage of {0} via {1}</item><item id="textFixGrp">Fix Group #{0}: {1}</item><item id="textFixIntro1a">This section groups {0} issues of type {1} with significant commonality in the their traces.</item><item id="textFixIntro1b">This section groups {0} issues with significant commonality in their traces. The following issue types are included:</item><item id="textFixIntro1c">This section groups {0} issues of type {1} with a common opensource file.</item><item id="textFixIntro1d">This section groups {0} issues with a common opensource file. The following issue types are included:</item><item id="textFixIntro2">These issues are grouped together to try to help you find a common fix that resolves them all.</item><item id="textFixRecImpl">This method is a part of the application code and appears in each of the grouped issue's traces. You should begin investigating a possible fix in the implementation of the method.</item><item id="textFixRecUse">This method is a third-party API, with a common caller in each of the grouped issue's traces. You should begin investigating a possible fix at that caller.</item><item id="textFixSigAlt">These method calls are also common to the traces of the issues in this group. They represent other possible locations to investigate a fix.</item><item id="textFixUngrp1a">All {0} issues in this report appear to be independent, lacking the commonality required in their traces to be grouped together. They all appear in this section.</item><item id="textFixUngrp1b">This section lists the remaining {0} issues that could not be included in any other fix groups.</item><item id="textFixUngrp2">The following issue types are included:</item><item id="totalIssuesInScanColon">Total security issues:</item><item id="trialVersionHeader">Please Note:</item><item id="trialVersionMessage">This summary report was created with the Application Security Analyzer Free Plan. Once you purchase the full service you will have access to a complete report with detailed descriptions of the issues found and how to remediate them.</item><item id="trialVersionWatermark">Free Plan</item><item id="ungrouped">Ungrouped</item><item id="urlColon">More information:</item><item id="via">via</item><item id="virtualLostSink">Virtual Lost Sink</item><item id="xForceColon">X-Force:</item></dictionary><layout><title>Static Analyzer Report</title><report-type>Static Analyzer Report</report-type><item><description>This report includes important security information about your application.</description></item><company-logo-path></company-logo-path><additional-logo-path></additional-logo-path><margins>0</margins><node-path></node-path><coverage>FullReport</coverage></layout><content><executive-summary>1</executive-summary><issues>0</issues><table-of-content>0</table-of-content><introduction>1</introduction><by-url>0</by-url><fix-recommendations>1</fix-recommendations><variants>1</variants><request-response>0</request-response><differences>0</differences><advisories>1</advisories><coverage-issue-types>0</coverage-issue-types><coverage-activities>0</coverage-activities><issue-information>1</issue-information><page-break-after-each-issue-url>0</page-break-after-each-issue-url><cover-page>1</cover-page><preface>1</preface></content><preface><sample-trace><call-trace>
	<call-invocation signature="com.ibm.security.appscan.altoromutual.servlet.AdminServlet.doPost(HttpServletRequest;HttpServletResponse):void" type="None">
		<call-invocation signature="javax.servlet.ServletRequest.getParameter(String):String" type="Source" filename="com.ibm.security.appscan.altoromutual.servlet.AdminServlet:90">
			<context><![CDATA[username = request.]]><highlight><![CDATA[getParameter]]></highlight><![CDATA[("username")]]></context>
		</call-invocation>
		<call-invocation signature="com.ibm.security.appscan.altoromutual.util.DBUtil.changePassword(String;String):String" type="None" filename="com.ibm.security.appscan.altoromutual.servlet.AdminServlet:103" alternate="true">
			<context><![CDATA[error = changePassword(]]><highlight><![CDATA[username]]></highlight><![CDATA[, password1)]]></context>
			<call-invocation signature="java.lang.StringBuilder.append(String):StringBuilder" type="NotAValidator" filename="com.ibm.security.appscan.altoromutual.util.DBUtil:408" fix="FIX: 11">
				<context><![CDATA[new StringBuilder().append(password).append("' WHERE USER_ID = '").append(]]><highlight><![CDATA[username]]></highlight><![CDATA[)]]></context>
			</call-invocation>
			<call-invocation signature="java.lang.StringBuilder.append(String):StringBuilder" type="NotAValidator" filename="com.ibm.security.appscan.altoromutual.util.DBUtil:408" fix="FIX: 11">
				<context><![CDATA[]]><highlight><![CDATA[new StringBuilder().append(password).append("' WHERE USER_ID = '").append(username)]]></highlight><![CDATA[.append("'")]]></context>
			</call-invocation>
			<call-invocation signature="java.lang.StringBuilder.toString():String" type="NotAValidator" filename="com.ibm.security.appscan.altoromutual.util.DBUtil:408" alternate="true">
				<context><![CDATA[]]><highlight><![CDATA[new StringBuilder().append(password).append("' WHERE USER_ID = '").append(username).append("'")]]></highlight><![CDATA[.toString()]]></context>
			</call-invocation>
			<call-invocation signature="java.sql.Statement.execute(String):boolean" type="Sink" filename="com.ibm.security.appscan.altoromutual.util.DBUtil:408">
				<context><![CDATA[statement.execute(]]><highlight><![CDATA[new StringBuilder().append(password).append("' WHERE USER_ID = '").append(username).append("'").toString()]]></highlight><![CDATA[)]]></context>
			</call-invocation>
		</call-invocation>
	</call-invocation>
</call-trace><trace-doc>
	<trace-placeholder></trace-placeholder>
	<p>This trace displays the flow of tainted data through a section of an application that contains an SQL Injection vulnerability. The code in question does not validate or sanitize data that originates from the untrusted source, leaving the door open for attackers to target the application's database.</p>
	<p>In this sample trace, the <code>doPost</code> servlet method calls <code>request.getParameter</code>. This method reads untrusted data (the user name) from the <code>HTTP POST</code> body, but it does not check the validity of the data, nor does it sanitize the data. This unverified, or tainted, data is then passed to the <code>changePassword</code> method. This method eventually passes the tainted data to the <code>statement.execute</code> method, where the vulnerability can be exploited.</p>
	<p>The trace provides this information:</p>
	<ul>
		<trace-li><code>Request.getParameter("username")</code> is marked as a source (<trace-icon type="Source"></trace-icon>). Its return value is the origin of untrusted data.</trace-li>
		<trace-li><code>Statement.execute()</code> has its first parameter marked as a sink (<trace-icon type="Sink"></trace-icon>), as tainted data (which contains malicious SQL commands) could be passed to the <code>sql</code> parameter without being validated or sanitized.</trace-li>
		<trace-li><code>StringBuilder().append()</code> is marked as a taint propagator (<trace-icon type="TaintProp"></trace-icon>), as it simply acts as a conduit to pass tainted data from one point (the first parameter) to another (the return value).</trace-li>
		<trace-li>The flow of tainted data is marked in red. The taint begins at <code>request.getParameter</code> and passes tainted data to the <code>username</code> variable. The data is then passed through the taint propagators, until it is appended to an SQL statement and executed by the <code>statement.execute</code> method.</trace-li>
		<trace-li>Each node in the trace provides the line number in the code at which the trace occurs, along with the code snippet of interest. For example, the source (<trace-icon type="Source"></trace-icon>) occurs at line 90.</trace-li>
		<trace-li>At the left of the trace, blue bars indicate the locations where a fix can be implemented in order to remove the security vulnerability. In this example, data validation and/or sanitization should be added close to the sink where the tainted data is appended to the SQL statement. A much better solution would be to properly execute this SQL query as a prepared statement.</trace-li>
		<trace-li>In this example, the darker blue bars on the left have highlighted a method that is common to the trace of multiple issues. This is called a <i>fix group</i> and it denotes a location in the code that, if addressed, may resolve more than one issue. It is therefore suggested that fix groups be investigated first. In this trace example, the location at which <code>append()</code> is being called should be investigated first for this particular issue.
			<p>In the report, issues are listed by fix groups, if possible. Within each fix group, issue types are listed, followed by the individual issues for each type and the trace for each issue. There are two types of fix recommendations:</p>
	  		<ul>
	  			<li>If the fix is for a method that is a part of the application code, it will be recommended that you fix the <i>implementation</i> of the code.</li>
	  			<li>If the fix is for a location that calls third-party code, it will be recommended that you fix the <i>usage</i> of the code.</li>
	 		</ul>
		</trace-li>
	</ul>
</trace-doc></sample-trace></preface><advisory-group><item id="ADVISORY: kbarticles/content/nl_en/Type/Injection.SQL"><name>Injection.SQL</name><testDescriptionMixed> 
         <p>Dynamically generating queries that include user input can lead to SQL injection attacks. An attacker can insert SQL commands or modifiers in the user input that can cause the query to behave in an unsafe manner.</p>
         <p>The most effective method of stopping SQL injection attacks is to only use stored procedures or parameterized database calls that do not allow the injection of code. This simple technique stops SQL injection attacks cold.</p>
         <p>If you are unable to avoid building SQL calls on the fly, then parameter validation is the next best defense against this attack. Validation is normally done in conjunction with a SQL-injection defense such as the use of stored procedures.</p>
         <p>All user input should be filtered, not to disallow bad characters such as a single quote ( ' ) and double quotes (""), but rather to only allow safe characters. Narrowly define the set of safe characters based on the expected value of the parameter in the request. Furthermore, duplicate any filtering done on the client-side on the server side.</p>
         <p>Ensure that all parameters are validated and use a powerful filtering mechanism for all input from the user interface to drastically reduce your security risk in this area.</p>
      </testDescriptionMixed></item><item id="ADVISORY: kbarticles/content/nl_en/Type/OpenSource"><name>OpenSource</name><testDescriptionMixed> 
        <p>Common Vulnerabilities and Exposures (CVE) is a dictionary of common names (i.e., CVE Identifiers) for publicly known cybersecurity vulnerabilities. CVE's common identifiers make it easier to share data across separate network security databases and tools, and provide a baseline for evaluating the coverage of an organization’s security tools. If a report from one of your security tools incorporates CVE Identifiers, you may then quickly and accurately access fix information in one or more separate CVE-compatible databases to remediate the problem.</p>
        <p>CVE is</p>
        <ul>
            <li>One name for one vulnerability or exposure</li>
			<li>One standardized description for each vulnerability or exposure</li>
			<li>A dictionary rather than a database</li>
			<li>How disparate databases and tools can "speak" the same language</li>
			<li>The way to interoperability and better security coverage</li>
			<li>A basis for evaluation among tools and databases</li>
			<li>Free for public download and use</li>
			<li>Industry-endorsed via the CVE Numbering Authorities, CVE Board, and CVE-Compatible Products</li>
		</ul>
        <p>CVE was launched in 1999 when most information security tools used their own databases with their own names for security vulnerabilities. At that time there was no significant variation among products and no easy way to determine when the different databases were referring to the same problem. The consequences were potential gaps in security coverage and no effective interoperability among the disparate databases and tools. In addition, each tool vendor used different metrics to state the number of vulnerabilities or exposures they detected, which meant there was no standardized basis for evaluation among the tools.</p>
		<p>CVE's common, standardized identifiers provided the solution to these problems.</p>
		<p>CVE is now the industry standard for vulnerability and exposure names. CVE Identifiers are also called "CVE names," "CVE numbers," "CVE IDs," and "CVEs" — provide reference points for data exchange so that information security products and services can speak with each other. CVE Identifiers also provides a baseline for evaluating the coverage of tools and services so that users can determine which tools are most effective and appropriate for their organization’s needs. In short, products and services compatible with CVE provide better coverage, easier interoperability, and enhanced security.</p>
        <p>Other vulnerabilities are a collection of security vulnerabilities identified from a large and diverse set of publicly available open source repositories and security advisories. Many of these vulnerabilities are presented here earlier than the National Vulnerability Database (NVD), and some will not be presented there at all</p>
        <p>Eacho of these vulnerability</p>
        <ul>
			<li>Has one unique identifier for each security advisory</li>
			<li>Does not overlap with CVE identifiers</li>
			<li>Is specific to the filename and version for each vulnerable component</li>
			<li>Is based on SHA1 signatures (rather than package or filename)</li>
			<li>Provides top fixes and suggestions based on publisher's own free and open source security information</li>
		</ul>
      </testDescriptionMixed><testTechnicalDescriptionMixed> 
         <p>Please refer to each individual vulnerability for mitigation.</p>
      </testTechnicalDescriptionMixed></item><item id="ADVISORY: kbarticles/content/nl_en/Type/validation_required"><name>Validation.Required</name><testDescriptionMixed> 
         <p>Input validation is necessary to ensure the integrity of the dynamic data of the application. Validation is useful to protect against cross-site scripting, SQL and command injection, and corrupt application data fields. Even if there are no directly vulnerable uses of a piece of data inside one application, data that is being passed to other applications should be validated to ensure that those applications are not given bad data.  Validation, especially for size and metacharacters that might cause string expansion, is even more important when dealing with fixed size, overflowable buffers.</p>
         <p>You should validate input from untrusted sources before using it. The untrusted data sources can be HTTP requests or other network traffic, file systems, databases, and any external systems that provide data to the application. In the case of HTTP requests, validate all parts of the request, including headers, form fields, cookies, and URL components that transfer information from the browser to the server side application.</p>
         <p>Attackers use unvalidated parameters to target the application's security mechanisms such as authentication and authorization or business logic, and as the primary vector for exercising many other kinds of error, including buffer overflows.  If the unvalidated parameters are stored in log files, used in dynamically generated database queries or shell commands, and/or stored in database tables, attackers may also target the server operating system, a database, back-end processing systems, or even log viewing tools.</p>
         <p>For example, if the application looks up products from the database using an unvalidated productID from HTTP request. This productID can be manipulated using readily available tools to submit SQL injection attacks to the backend database.</p>
         <sample format="Java" type="bad">
            <code-block>
final String productID = request.getParameter( "productID" );
final String sql = "Select * from Product Where productID = '" + productID + "'";
final Statement statement = connection.createStatement();
final boolean rsReturned = statement.execute(sql);
			</code-block>
         </sample>
         <sample format="C++" type="bad">
			 <code-block>
char productID[28];
fscanf(fd, "%28s", <highlight>productID</highlight>);
char sql[71] = "Select * from Product Where productID = '";
strncat(sql, <highlight>productID</highlight>, 28);
strncat(sql, "'", 1);
SQLPrepare(handle, sql, 71);
SQLRETURN ret = SQLExecute(handle);
			 </code-block>
		 </sample>
         <p>Note that using dynamically generated SQL queries is another bad practice. Refer to vulnerability type <article-ref display="SQL Injection" id="kbarticles/content/nl_en/Type/Injection.SQL"/> for more detail.</p>
         <sample format="Java" type="good">
            <code-block>
// This class would simply associate parameter names with a data type, plus bounds for
// numeric data or a regular expression for text.
Validator validator = Validator.getInstance( this.getServletContext );
Boolean valid = false;
try
{
    validator.validate( request );
    valid = true;
}
catch ( ValidationException e )
{
    request.getSession().invalidate();
    out.println("Invalid HTTP request");
    out.close();
}
if ( valid )
{
    final String productId = request.getParameter( "productID" );
    final String sql = "Select * from Product where productID= ?"); 
    final PreparedStatement ps = con.prepareStatement(sql);
    ps.setString(1,productID);
    ps.execute();
}
			</code-block>
         </sample>
         <sample format="C++" type="bad">
			 <code-block>
char productID[28];
fscanf(fd, "%.28s", <highlight>productID</highlight>);
regex_t * productIDValidator;
regcomp(productIDValidator, "[^a-z]*", REG_EXTENDED);
int matchCount;
regmatch_t * matches;
regexec(productIDValidator, <highlight>productID</highlight>, matches, matchCount, 0);
if(0 == matches)
{
    char sql[70] = "Select * from Product Where productID = '?'";
    int sqlLen = 70;
    SQLPrepare(handle, sql, 70);
    SQLBindParameter(handle, 1, SQL_PARAM_INPUT, SQL_C_CHAR, SQL_CHAR, 28, 0, <highlight>productID</highlight>, *sqlLen)
    SQLRETURN ret = SQLExecute(handle);
}
else
{
    <highlight>HandleBadProductID();</highlight>
}
			 </code-block>
		 </sample>
         <p>In this instance, a regular expression constrained input to a known set of characters, through a whitelist (rejecting inputs containing anything not in that set), and of a known and limited length. Using a whitelist instead of a blacklist is important, because it can be difficult to anticipate which characters (especially when Unicode is involved) may cause problems, while it is normally easy to determine which characters are legal in a given input field.</p>
      </testDescriptionMixed><testTechnicalDescriptionMixed> 
         <p>The primary recommendation is to validate each input value against a detailed specification of the expectation for that value. This specification should detail characteristics like the character set allowed, length, whether to allow null, minimum value, maximum value, enumerated values, or a specific regular expression. For example, make sure all email fields have the same format. Also, limit name fields and other text fields to an appropriate character set, no special characters, and with expected minimum and maximum sizes. A input pattern violation can be evidence of an attack and should be logged and responded to appropriately.</p>
         <p>There are several possible approaches to input validation in an application. The recommendation is to implement the features in a single component that is invoked in a central location. If this is not possible, then enforce a strong policy for the use of a common set of input validation functions.</p>
      </testTechnicalDescriptionMixed></item></advisory-group><issue-type-group maxIssuesPerIssueType="7"><item id="OpenSource" count="3" info="0" low="0" medium="3" high="0"><name>OpenSource</name><testDescription>Not available</testDescription><advisory><ref>ADVISORY: kbarticles/content/nl_en/Type/OpenSource</ref></advisory></item><item id="Validation.Required" count="7" info="0" low="1" medium="0" high="6"><name>Validation.Required</name><testDescription>The application uses a method that requires input validation, but no validation appears to be in use.</testDescription><advisory><ref>ADVISORY: kbarticles/content/nl_en/Type/validation_required</ref></advisory></item></issue-type-group><fix-recommendation-group maxIssuesPerFixRecommendation="4"><item id="FIX: 1" priority-id="3" info="0" low="0" medium="0" high="4" total="4"><remediation name="1,StdCouchDbInstance()" type="use">CouchDBConnectorFactory.java:79</remediation><priority>High</priority><general><text>org.ektorp.impl.StdCouchDbInstance(HttpClient):void</text></general><types><item id="FIX: 1Vulnerability.Validation.Required" priority-id="3" total="4" advisory="ADVISORY: kbarticles/content/nl_en/Type/validation_required"><name>Validation.Required</name></item></types><alternates><item>org.ektorp.http.StdHttpClient$Builder.build():HttpClient</item><item>org.ektorp.http.StdHttpClient$Builder.caching(boolean):StdHttpClient$Builder</item><item>org.ektorp.impl.StdCouchDbInstance(HttpClient):void</item></alternates></item><item id="FIX: 3" priority-id="3" info="0" low="0" medium="0" high="2" total="2"><remediation name="2,InventoryQRadarFilter.createQRadarMap()" type="impl"></remediation><priority>High</priority><general><text>com.urbancode.air.inventory.web.InventoryQRadarFilter.createQRadarMap(HttpServletRequest):Map</text></general><types><item id="FIX: 3Vulnerability.Validation.Required" priority-id="3" total="2" advisory="ADVISORY: kbarticles/content/nl_en/Type/validation_required"><name>Validation.Required</name></item></types></item><item id="FIX: 2" priority-id="2" info="0" low="0" medium="2" high="0" total="2"><remediation name="3,../_inven-942884829/d/WEB-INF/lib/httpclient-4.3.4.jar" type="opensource"></remediation><priority>Medium</priority><general><text>../_inven-942884829/d/WEB-INF/lib/httpclient-4.3.4.jar</text></general><types><item id="FIX: 2Vulnerability.OpenSource" priority-id="2" total="2" advisory="ADVISORY: kbarticles/content/nl_en/Type/OpenSource"><name>OpenSource</name></item></types></item><item id="FIX: 0" priority-id="0" info="0" low="1" medium="1" high="0" total="2"><remediation name="Unique_ALL">Unique_ALL</remediation><priority>Medium</priority><general><text>Unique_ALL</text></general><types><item id="FIX: 0Vulnerability.OpenSource" priority-id="2" total="1" advisory="ADVISORY: kbarticles/content/nl_en/Type/OpenSource"><name>OpenSource</name></item><item id="FIX: 0Vulnerability.Validation.Required" priority-id="1" total="1" advisory="ADVISORY: kbarticles/content/nl_en/Type/validation_required"><name>Validation.Required</name></item></types></item></fix-recommendation-group><scan-information><scan-name>IBM DevOps Services Inventory</scan-name><scan-file-name>IBM DevOps Services Inventory.irx</scan-file-name><scan-date-and-time-iso>2018-06-20T21:32:57+0000</scan-date-and-time-iso><scan-date-and-time>June 20, 2018 21:32:57 UTC</scan-date-and-time><product-name>IBM Application Security On Cloud</product-name><product-version>1.0</product-version><test-policy-name>standard</test-policy-name><application-id-name>IBM DevOps Services Inventory</application-id-name><engine-version>6.0.1224</engine-version></scan-information><issue-group total="10"><item id="-675112527"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="0ea455a4-0323-4942-9c39-08647342df10"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="InventoryQRadarFilter:122">javax.servlet.http.HttpServletRequest.getHeader(String):String</method-signature><method-signature2 label="sinkColon" type="Sink" filename="InventoryQRadarFilter:52">javax.servlet.ServletRequest.setAttribute(String;Object):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.web.InventoryQRadarFilter.doFilter(ServletRequest;ServletResponse;FilterChain):void" type="None"><call-invocation signature="com.urbancode.air.inventory.web.InventoryQRadarFilter.createQRadarMap(HttpServletRequest):Map" type="None" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:52" fix="FIX: 3"><context><![CDATA[this.]]><highlight><![CDATA[createQRadarMap]]></highlight><![CDATA[(req)]]></context><call-invocation signature="javax.servlet.http.HttpServletRequest.getHeader(String):String" type="Source" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:122"><context><![CDATA[authHeader = req.]]><highlight><![CDATA[getHeader]]></highlight><![CDATA[("Authorization")]]></context></call-invocation><call-invocation signature="java.lang.String.substring(int):String" type="NotAValidator" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:129"><context><![CDATA[]]><highlight><![CDATA[authHeader]]></highlight><![CDATA[.substring("Basic".length())]]></context></call-invocation><call-invocation signature="java.lang.String.trim():String" type="NotAValidator" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:129"><context><![CDATA[]]><highlight><![CDATA[authHeader.substring("Basic".length())]]></highlight><![CDATA[.trim()]]></context></call-invocation><call-invocation signature="com.urbancode.air.inventory.web.InventoryQRadarFilter.getUsername(String):String" type="None" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:129"><context><![CDATA[username = this.getUsername(]]><highlight><![CDATA[authHeader.substring("Basic".length()).trim()]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="java.util.Map.put(Object;Object):Object" type="NotAValidator" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:134"><context><![CDATA[qradar.put(PROP_QRADAR_USERNAME, ]]><highlight><![CDATA[username]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation><call-invocation signature="javax.servlet.ServletRequest.setAttribute(String;Object):void" type="Sink" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:52"><context><![CDATA[request.setAttribute(PROP_QRADAR, ]]><highlight><![CDATA[createQRadarMap(req)]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref>FIX: 3</ref></fix><severity>High</severity><severity-id>3</severity-id></item><item id="965374415"><issue-type><ref>OpenSource</ref></issue-type><variants-count>1</variants-count><variant-group><item id="e99b6b19-088e-49ea-a53e-b7a05e3bf2fc"><issue-information type="none"><method-signature2 label="fileColon" line="0">../_inven-942884829/d/WEB-INF/lib/commons-codec-1.6.jar</method-signature2><display-name label="displayNameColon">2010-0001</display-name><publish-date label="publishDateColon">2010-02-26 00:00:00</publish-date><description label="descriptionColon">Base64 encode() method is no longer thread-safe in Apache Commons Codec before version 1.7, which might disclose the wrong data or allow an attacker to change non-private fields.</description></issue-information></item></variant-group><fix><ref hide="true">FIX: 0</ref></fix><severity>Medium</severity><severity-id>2</severity-id></item><item id="-910227288"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="78d0072a-dafa-4b05-8d97-115aa9df6b50"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="CouchDBConnectorFactory:70">org.ektorp.http.StdHttpClient$Builder.username(String):StdHttpClient$Builder</method-signature><method-signature2 label="sinkColon" type="Sink" filename="CouchDBConnectorFactory:80">org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.server.CouchDBConnectorFactory.createConnector():CouchDbConnector" type="None"><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.username(String):StdHttpClient$Builder" type="Source" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:70"><context><![CDATA[new StdHttpClient$Builder().url(url).]]><highlight><![CDATA[username]]></highlight><![CDATA[(user)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.password(String):StdHttpClient$Builder" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:71"><context><![CDATA[]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user)]]></highlight><![CDATA[.password(password)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.caching(boolean):StdHttpClient$Builder" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:72" alternate="true"><context><![CDATA[]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password)]]></highlight><![CDATA[.caching(0)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.build():HttpClient" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:73" alternate="true"><context><![CDATA[httpClient = ]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password).caching(0)]]></highlight><![CDATA[.build()]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbInstance(HttpClient):void" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:79" fix="FIX: 1"><context><![CDATA[db = new StdCouchDbInstance(]]><highlight><![CDATA[httpClient]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void" type="Sink" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:80"><context><![CDATA[connector = new StdCouchDbConnector(database, ]]><highlight><![CDATA[db]]></highlight><![CDATA[, new CouchDBMapperFactory())]]></context></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref>FIX: 1</ref></fix><severity>High</severity><severity-id>3</severity-id></item><item id="-228036257"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="640a439c-a167-4db3-a88b-be6b47906905"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="CouchDBConnectorFactory:70">org.ektorp.http.StdHttpClient$Builder.username(String):StdHttpClient$Builder</method-signature><method-signature2 label="sinkColon" type="Sink" filename="CouchDBConnectorFactory:80">org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.server.CouchDBConnectorFactory.createConnector():CouchDbConnector" type="None"><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.username(String):StdHttpClient$Builder" type="Source" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:70"><context><![CDATA[new StdHttpClient$Builder().url(url).]]><highlight><![CDATA[username]]></highlight><![CDATA[(user)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.password(String):StdHttpClient$Builder" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:71"><context><![CDATA[]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user)]]></highlight><![CDATA[.password(password)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.caching(boolean):StdHttpClient$Builder" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:72" alternate="true"><context><![CDATA[]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password)]]></highlight><![CDATA[.caching(0)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.build():HttpClient" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:73" alternate="true"><context><![CDATA[httpClient = ]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password).caching(0)]]></highlight><![CDATA[.build()]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbInstance(HttpClient):void" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:79" fix="FIX: 1"><context><![CDATA[db = new StdCouchDbInstance(]]><highlight><![CDATA[httpClient]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void" type="Sink" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:80"><context><![CDATA[connector = new StdCouchDbConnector(database, db, ]]><highlight><![CDATA[new CouchDBMapperFactory()]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref>FIX: 1</ref></fix><severity>High</severity><severity-id>3</severity-id></item><item id="991532657"><issue-type><ref>OpenSource</ref></issue-type><variants-count>1</variants-count><variant-group><item id="147a9478-89b1-4c23-a898-5f648e390882"><issue-information type="none"><method-signature2 label="fileColon" line="0">../_inven-942884829/d/WEB-INF/lib/httpclient-4.3.4.jar</method-signature2><display-name label="displayNameColon">CVE-2015-5262</display-name><publish-date label="publishDateColon">2015-10-27 20:59:00</publish-date><description label="descriptionColon">http/conn/ssl/SSLConnectionSocketFactory.java in Apache HttpComponents HttpClient before 4.3.6 ignores the http.socket.timeout configuration setting during an SSL handshake, which allows remote attackers to cause a denial of service (HTTPS call hang) via unspecified vectors.</description><fix-resolution-text label="resolutionColon">The vendor has issued a fix (4.3.6).

The vendor has also issued a source code fix, available at:

http://svn.apache.org/viewvc/httpcomponents/httpclient/branches/4.3.x/httpclient/src/main/java/org/apache/http/conn/ssl/SSLConnectionSocketFactory.java?r1=1560975&amp;amp;r2=1626784</fix-resolution-text><url-for-info label="urlColon">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5262</url-for-info></issue-information></item></variant-group><fix><ref>FIX: 2</ref></fix><severity>Medium</severity><severity-id>2</severity-id></item><item id="2045812808"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="d8e25075-17b5-4be0-8fe1-5349af7c0ab5"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="SecurityFilter:88">javax.servlet.http.HttpServletRequest.getHeader(String):String</method-signature><method-signature2 label="sinkColon" type="Sink" filename="SecurityFilter:148">javax.crypto.Cipher.init(int;Key;AlgorithmParameterSpec):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.web.SecurityFilter.doFilter(ServletRequest;ServletResponse;FilterChain):void" type="None"><call-invocation signature="javax.servlet.http.HttpServletRequest.getHeader(String):String" type="Source" filename="com.urbancode.air.inventory.web.SecurityFilter:88"><context><![CDATA[auth = request.]]><highlight><![CDATA[getHeader]]></highlight><![CDATA[("Authorization")]]></context></call-invocation><call-invocation signature="java.lang.String.substring(int):String" type="NotAValidator" filename="com.urbancode.air.inventory.web.SecurityFilter:90"><context><![CDATA[]]><highlight><![CDATA[auth]]></highlight><![CDATA[.substring("Basic".length())]]></context></call-invocation><call-invocation signature="java.lang.String.trim():String" type="NotAValidator" filename="com.urbancode.air.inventory.web.SecurityFilter:90"><context><![CDATA[encodedCreds = ]]><highlight><![CDATA[auth.substring("Basic".length())]]></highlight><![CDATA[.trim()]]></context></call-invocation><call-invocation signature="com.sun.jersey.core.util.Base64.decode(String):byte[]" type="TaintProp" filename="com.urbancode.air.inventory.web.SecurityFilter:91"><context><![CDATA[decode(]]><highlight><![CDATA[encodedCreds]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="java.lang.String(byte[]):void" type="NotAValidator" filename="com.urbancode.air.inventory.web.SecurityFilter:91"><context><![CDATA[decodedCreds = new String(]]><highlight><![CDATA[decode(encodedCreds)]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="java.lang.String.split(String;int):String[]" type="NotAValidator" filename="com.urbancode.air.inventory.web.SecurityFilter:92"><context><![CDATA[creds = ]]><highlight><![CDATA[decodedCreds]]></highlight><![CDATA[.split(":", 2)]]></context></call-invocation><call-invocation signature="com.urbancode.air.inventory.web.SecurityFilter.decryptToken(String):JSONObject" type="None" filename="com.urbancode.air.inventory.web.SecurityFilter:97"><context><![CDATA[tokenJson = this.decryptToken(]]><highlight><![CDATA[authToken]]></highlight><![CDATA[)]]></context><call-invocation signature="java.lang.String.split(String):String[]" type="NotAValidator" filename="com.urbancode.air.inventory.web.SecurityFilter:125"><context><![CDATA[segments = ]]><highlight><![CDATA[token]]></highlight><![CDATA[.split("\.")]]></context></call-invocation><call-invocation signature="java.lang.String.toCharArray():char[]" type="NotAValidator" filename="com.urbancode.air.inventory.web.SecurityFilter:130"><context><![CDATA[]]><highlight><![CDATA[segments[0]]]></highlight><![CDATA[.toCharArray()]]></context></call-invocation><call-invocation signature="org.apache.commons.codec.binary.Hex.decodeHex(char[]):byte[]" type="TaintProp" filename="com.urbancode.air.inventory.web.SecurityFilter:130"><context><![CDATA[ivBytes = decodeHex(]]><highlight><![CDATA[segments[0].toCharArray()]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="com.urbancode.air.inventory.web.SecurityFilter.createCipher(int;byte[]):Cipher" type="None" filename="com.urbancode.air.inventory.web.SecurityFilter:140"><context><![CDATA[cipher = this.createCipher(2, ]]><highlight><![CDATA[ivBytes]]></highlight><![CDATA[)]]></context><call-invocation signature="javax.crypto.spec.IvParameterSpec(byte[]):void" type="TaintProp" filename="com.urbancode.air.inventory.web.SecurityFilter:147"><context><![CDATA[ivSpec = new IvParameterSpec(]]><highlight><![CDATA[iv]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="javax.crypto.Cipher.init(int;Key;AlgorithmParameterSpec):void" type="Sink" filename="com.urbancode.air.inventory.web.SecurityFilter:148"><context><![CDATA[cipher.init(opMode, this.keySpecAES, ]]><highlight><![CDATA[ivSpec]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref hide="true">FIX: 0</ref></fix><severity>Low</severity><severity-id>1</severity-id></item><item id="-1127480299"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="548def96-ee38-4516-8c60-904f5c47c567"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="CouchDBConnectorFactory:71">org.ektorp.http.StdHttpClient$Builder.password(String):StdHttpClient$Builder</method-signature><method-signature2 label="sinkColon" type="Sink" filename="CouchDBConnectorFactory:80">org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.server.CouchDBConnectorFactory.createConnector():CouchDbConnector" type="None"><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.password(String):StdHttpClient$Builder" type="Source" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:71"><context><![CDATA[new StdHttpClient$Builder().url(url).username(user).]]><highlight><![CDATA[password]]></highlight><![CDATA[(]]><highlight><![CDATA[password]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.caching(boolean):StdHttpClient$Builder" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:72" alternate="true"><context><![CDATA[]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password)]]></highlight><![CDATA[.caching(0)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.build():HttpClient" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:73" alternate="true"><context><![CDATA[httpClient = ]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password).caching(0)]]></highlight><![CDATA[.build()]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbInstance(HttpClient):void" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:79" fix="FIX: 1"><context><![CDATA[db = new StdCouchDbInstance(]]><highlight><![CDATA[httpClient]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void" type="Sink" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:80"><context><![CDATA[connector = new StdCouchDbConnector(database, db, ]]><highlight><![CDATA[new CouchDBMapperFactory()]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref>FIX: 1</ref></fix><severity>High</severity><severity-id>3</severity-id></item><item id="1510997957"><issue-type><ref>OpenSource</ref></issue-type><variants-count>1</variants-count><variant-group><item id="6fc0e33c-d873-498b-bcfc-21d4a3e9ed65"><issue-information type="none"><method-signature2 label="fileColon" line="0">../_inven-942884829/d/WEB-INF/lib/httpclient-4.3.4.jar</method-signature2><display-name label="displayNameColon">CVE-2014-3577</display-name><publish-date label="publishDateColon">2014-08-21 18:55:00</publish-date><description label="descriptionColon">org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a "CN=" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the "foo,CN=www.apache.org" string in the O field.</description><fix-resolution-text label="resolutionColon">Replace or update the following files: AbstractVerifier.java, TestHostnameVerifier.java</fix-resolution-text><url-for-info label="urlColon">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3577</url-for-info></issue-information></item></variant-group><fix><ref>FIX: 2</ref></fix><severity>Medium</severity><severity-id>2</severity-id></item><item id="-431870066"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="1386dc89-6e61-4770-92f2-1dbd43b87e68"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="CouchDBConnectorFactory:71">org.ektorp.http.StdHttpClient$Builder.password(String):StdHttpClient$Builder</method-signature><method-signature2 label="sinkColon" type="Sink" filename="CouchDBConnectorFactory:80">org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.server.CouchDBConnectorFactory.createConnector():CouchDbConnector" type="None"><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.password(String):StdHttpClient$Builder" type="Source" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:71"><context><![CDATA[new StdHttpClient$Builder().url(url).username(user).]]><highlight><![CDATA[password]]></highlight><![CDATA[(]]><highlight><![CDATA[password]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.caching(boolean):StdHttpClient$Builder" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:72" alternate="true"><context><![CDATA[]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password)]]></highlight><![CDATA[.caching(0)]]></context></call-invocation><call-invocation signature="org.ektorp.http.StdHttpClient$Builder.build():HttpClient" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:73" alternate="true"><context><![CDATA[httpClient = ]]><highlight><![CDATA[new StdHttpClient$Builder().url(url).username(user).password(password).caching(0)]]></highlight><![CDATA[.build()]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbInstance(HttpClient):void" type="TaintProp" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:79" fix="FIX: 1"><context><![CDATA[db = new StdCouchDbInstance(]]><highlight><![CDATA[httpClient]]></highlight><![CDATA[)]]></context></call-invocation><call-invocation signature="org.ektorp.impl.StdCouchDbConnector(String;CouchDbInstance;ObjectMapperFactory):void" type="Sink" filename="com.urbancode.air.inventory.server.CouchDBConnectorFactory:80"><context><![CDATA[connector = new StdCouchDbConnector(database, ]]><highlight><![CDATA[db]]></highlight><![CDATA[, new CouchDBMapperFactory())]]></context></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref>FIX: 1</ref></fix><severity>High</severity><severity-id>3</severity-id></item><item id="495114671"><issue-type><ref>Validation.Required</ref></issue-type><variants-count>1</variants-count><variant-group><item id="eed90cd2-84f2-4aff-8bd1-65e395c47908"><issue-information type="call-trace"><method-signature label="sourceColon" type="Source" filename="InventoryQRadarFilter:122">javax.servlet.http.HttpServletRequest.getHeader(String):String</method-signature><method-signature2 label="sinkColon" type="Sink" filename="InventoryQRadarFilter:52">javax.servlet.ServletRequest.setAttribute(String;Object):void</method-signature2><call-trace><call-invocation signature="com.urbancode.air.inventory.web.InventoryQRadarFilter.doFilter(ServletRequest;ServletResponse;FilterChain):void" type="None"><call-invocation signature="com.urbancode.air.inventory.web.InventoryQRadarFilter.createQRadarMap(HttpServletRequest):Map" type="None" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:52" fix="FIX: 3"><context><![CDATA[this.]]><highlight><![CDATA[createQRadarMap]]></highlight><![CDATA[(req)]]></context><call-invocation signature="javax.servlet.http.HttpServletRequest.getHeader(String):String" type="Source" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:122"><context><![CDATA[authHeader = req.]]><highlight><![CDATA[getHeader]]></highlight><![CDATA[("Authorization")]]></context></call-invocation><call-invocation signature="java.util.Map.put(Object;Object):Object" type="NotAValidator" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:131"><context><![CDATA[qradar.put(PROP_QRADAR_USERNAME, ]]><highlight><![CDATA[authHeader]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation><call-invocation signature="javax.servlet.ServletRequest.setAttribute(String;Object):void" type="Sink" filename="com.urbancode.air.inventory.web.InventoryQRadarFilter:52"><context><![CDATA[request.setAttribute(PROP_QRADAR, ]]><highlight><![CDATA[createQRadarMap(req)]]></highlight><![CDATA[)]]></context></call-invocation></call-invocation></call-trace></issue-information></item></variant-group><fix><ref>FIX: 3</ref></fix><severity>High</severity><severity-id>3</severity-id></item></issue-group><cause-group></cause-group><security-risk-group maxIssuesPerSecurityRisk="0"></security-risk-group><scan-summary><exit-status>SUCCESS</exit-status><scan-duration>80968 ms</scan-duration><highest-severity-id>3</highest-severity-id><final-report-revision>0001</final-report-revision></scan-summary></xml-report>